// <auto-generated />
using E_commers_project;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_commers_project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241105071608_E-cooomerse")]
    partial class Ecooomerse
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_commers_project.Data.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Product_price")
                        .HasColumnType("int");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("SellersSellerId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("SellersSellerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("E_commers_project.Data.Sellers", b =>
                {
                    b.Property<int>("SellerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SellerId"));

                    b.Property<string>("SellerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellerName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SellerPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seller_comfarm_pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seller_creadcard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seller_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sellerphone")
                        .HasColumnType("int");

                    b.HasKey("SellerId");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("E_commers_project.Data.User_products", b =>
                {
                    b.Property<int>("Productid")
                        .HasColumnType("int");

                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.HasKey("Productid", "Userid");

                    b.HasIndex("Userid");

                    b.ToTable("User_products");
                });

            modelBuilder.Entity("E_commers_project.Data.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_comfarm_pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_creadcard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Userphone")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("E_commers_project.Data.Users_Sellers", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Sellerid")
                        .HasColumnType("int");

                    b.HasKey("UserId", "Sellerid");

                    b.HasIndex("Sellerid");

                    b.ToTable("Users_Sellers");
                });

            modelBuilder.Entity("E_commers_project.Data.Products", b =>
                {
                    b.HasOne("E_commers_project.Data.Sellers", "Sellers")
                        .WithMany("Products")
                        .HasForeignKey("SellersSellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sellers");
                });

            modelBuilder.Entity("E_commers_project.Data.User_products", b =>
                {
                    b.HasOne("E_commers_project.Data.Products", "products")
                        .WithMany("user_Products")
                        .HasForeignKey("Productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_commers_project.Data.Users", "users")
                        .WithMany("User_products")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("products");

                    b.Navigation("users");
                });

            modelBuilder.Entity("E_commers_project.Data.Users_Sellers", b =>
                {
                    b.HasOne("E_commers_project.Data.Sellers", "sellers")
                        .WithMany("User_sellers")
                        .HasForeignKey("Sellerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_commers_project.Data.Users", "users")
                        .WithMany("User_sellers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sellers");

                    b.Navigation("users");
                });

            modelBuilder.Entity("E_commers_project.Data.Products", b =>
                {
                    b.Navigation("user_Products");
                });

            modelBuilder.Entity("E_commers_project.Data.Sellers", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("User_sellers");
                });

            modelBuilder.Entity("E_commers_project.Data.Users", b =>
                {
                    b.Navigation("User_products");

                    b.Navigation("User_sellers");
                });
#pragma warning restore 612, 618
        }
    }
}
